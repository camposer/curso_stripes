1.- Implementar el listar de Persona. Ahora mismo persona.jsp imprime una tabla estática de personas, la idea es que esta lista salga de "base de datos". Deberá obtener las personas del PersonaService y pasarlas a la JSP para su impresión de forma dinámica.

2.- Implementar el agregar de Persona. Cuando llene los datos del formulario, si hago clic en el botón de agregar se debea agregar una nueva persona a la "base de datos" y presentar de nuevo la página inicial con la lista actualizada.

3.- Implementar el eliminar de Persona. Al hacer clic sobre el enlace de eliminar de cualquier elemento de la tabla, se deberá remover la persona de la "base de datos" y presentar de nuevo la página inicial con la lista actualizada. Ver: <s:link></s:link>

4.- Implementar el mostrar de Persona. Al hacer clic sobre el enlace de mostrar de cualquier elemento de la tabla, se deberán mostrar los datos de la persona y mantener la lista de resultados.

5.- Implementar el modificar de Persona. Cuando llene los datos del formulario después de hacer clic en mostrar, si presiono "guardar" se deberá modificar la persona especificada en la "base de datos" y presentar de nuevo la página inicial con la lista actualizada.

------

6.- Agregar un nuevo campo "correo electrónico" a Persona y su formulario.
7.- Incluir las siguientes validaciones con anotaciones y métodos de validación
	a.- El nombre no puede estar vacío y no contener números
	b.- El apellido no puede estar vacío y tener una longitud mínima de 3 caracteres.
	c.- El correo electrónico debe ser válido

@Validate(field = "nombre", required = true, on = { "agregar", "modificar" })

-------

8.- Cambiar el correo electrónico por un campo de tipo CorreoElectronico. La nueva clase deberá tener dos atributos: usuario y dominio
9.- Implementar un conversor que transforme los campos de correo electrónico al objeto
10.- Implementar un formateador que transforme los correos electrónico a string









